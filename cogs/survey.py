import discord
from discord.ext import commands
from discord import app_commands
import re
import json
from os import access,F_OK
from os import path as Path

from db import save_survey, get_survey_by_user  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã
CWD = Path.realpath(Path.dirname(__name__))
def JSONLoad(filename,cwd=CWD):	
    path = "{}\{}".format(cwd,filename)
    try:
        access(path, F_OK)
        with open(path, "r") as f:
            data = json.load(f)
        return data
    except:
        print("did not found '{}' file.".format(filename))
        return 0
CONFIG = JSONLoad("config.json")
SURVEY_CHANNEL_ID,REACTION_EMOJI = CONFIG["SURVEY_CHANNEL_ID"],CONFIG["REACTION_EMOJI"]

class SurveyModal(discord.ui.Modal, title="üìî –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∫–µ—Ç—ã"):
    data = JSONLoad("survey_questions.json")
    textInputs = {name:discord.ui.TextInput(**question) for name,question in data["questions"]}
    questionValues = {name:Input.value for name,Input in textInputs.items()} #MAY BREAK IF SOCIALS IS EMPTY
    async def on_submit(self, interaction: discord.Interaction):

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ age_value –Ω–µ—Ç –±—É–∫–≤ (–ª–∞—Ç–∏–Ω–∏—Ü—ã –∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã)
        if re.search(r"[A-Za-z–ê-–Ø–∞-—è–Å—ë]", self.questionValues["age"].strip()):
            await interaction.response.send_message(
                "‚ö†Ô∏è –í –ø–æ–ª–µ –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ–ª—å–∑—è –≤–≤–æ–¥–∏—Ç—å –±—É–∫–≤—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏—Ñ—Ä—ã –∏ —Å–∏–º–≤–æ–ª—ã.",
                ephemeral=True
            )
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∫–µ—Ç—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        save_survey(user_id=interaction.user.id, **self.questionValues)

        # –ü—É–±–ª–∏–∫—É–µ–º –∞–Ω–∫–µ—Ç—É –≤ –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª
        channel = interaction.client.get_channel(SURVEY_CHANNEL_ID)
        if channel is None:
            await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–∫–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            return

        embed = discord.Embed(title="üìù –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞", color=discord.Color.purple())
        for name,question in self.data["questions"]:
            embed.add_field(name=question["label"], value=self.questionValues[name] if self.questionValues[name] else "‚Äî", inline=False)
        embed.set_footer(text=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {interaction.user.display_name}")

        msg = await channel.send(embed=embed)
        await msg.add_reaction(REACTION_EMOJI)

        await interaction.response.send_message("‚úÖ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", ephemeral=True)


class SurveyCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="–∞–Ω–∫–µ—Ç–∞", description="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—É")
    @app_commands.describe(
        –¥–µ–π—Å—Ç–≤–∏–µ="–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å",
        —É—á–∞—Å—Ç–Ω–∏–∫="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á—å—é –∞–Ω–∫–µ—Ç—É –Ω—É–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å"
    )
    @app_commands.choices(
        –¥–µ–π—Å—Ç–≤–∏–µ=[
            app_commands.Choice(name="—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", value="—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
            app_commands.Choice(name="–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å", value="–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
        ]
    )
    async def –∞–Ω–∫–µ—Ç–∞(
        self,
        interaction: discord.Interaction,
        –¥–µ–π—Å—Ç–≤–∏–µ: app_commands.Choice[str],
        —É—á–∞—Å—Ç–Ω–∏–∫: discord.User = None
    ):
        if –¥–µ–π—Å—Ç–≤–∏–µ.value == "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å":
            await interaction.response.send_modal(SurveyModal())
        elif –¥–µ–π—Å—Ç–≤–∏–µ.value == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å":
            user = —É—á–∞—Å—Ç–Ω–∏–∫ or interaction.user

            # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –∏–∑ –ë–î
            data = get_survey_by_user(user.id)
            if not data:
                await interaction.response.send_message("‚ùå –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
                return

            embed = discord.Embed(
                title=f"üìù –ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.display_name}",
                color=discord.Color.green()
            )
            for name,question in self.data["questions"]:
                embed.add_field(name=question["label"], value=self.questionValues[name] if self.questionValues[name] else "‚Äî", inline=False)
            embed.set_footer(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.display_name}")

            await interaction.response.send_message(embed=embed, ephemeral=True)

    # –ù–ï –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ on_ready, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è discord.py 2.x+
    # @commands.Cog.listener()
    # async def on_ready(self):
    #     self.bot.tree.add_command(self.–∞–Ω–∫–µ—Ç–∞)


async def setup(bot):
    await bot.add_cog(SurveyCog(bot))
